function kata {
  cd ~/dev/_ember/_getting_started/_blog_video/kata/my_kata
  rm -rf *
  cp -R ../../starter_files/* .
}
function vox {
  cd /Users/livando/Dropbox/DropVox
  ls
}

function mark {
  open -a Marked.app $1
}
function spark {
  open -a Marked.app ~/Dropbox/notes/02-13-14-spark\ file.md
  vim ~/Dropbox/notes/02-13-14-spark\ file.md
}
function ppls {
  open -a Marked.app ~/clients/sparkbox/ppls/ppls_notes.md
  vim ~/clients/sparkbox/ppls/ppls_notes.md
}
function egs {
  open -a Google\ Chrome.app http://emberjs.com/guides/getting-started/
  open -a Google\ Chrome.app ~/dev/_ember/getting_started/index.html
  open -a Marked.app ~/dev/_ember/getting_started/ember.md
  cd ~/dev/_ember/getting_started
  vim ~/dev/_ember/getting_started
}
function ember {
  cd ~/dev/_ember
  open -a Marked.app ~/dev/_ember/getting_started/ember.md
  vim ~/dev/_ember/getting_started/ember.md
}
function dcs {
  open -a Marked.app ~/clients/sparkbox/ppls/dcs_notes.md
  vim ~/clients/sparkbox/ppls/dcs_notes.md
}
function stf {
  open -a Marked.app ~/dev/_red_iron_crow/www.steeltrap.com/brainstorming/feature.md
  vim ~/dev/_red_iron_crow/www.steeltrap.com/brainstorming/feature.md
}
function nip {
  mkdir $1
  cd $1
  mkdir assets to_client working_files
  cd working_files
  mkdir ios site
}
function redis {
  open http://localhost:8081
  redis-commander
}
function rn {
  rails new $1 -b ~/bin/dotfiles/config/app_builder.rb
}
function hg {
  history | grep --color=auto $1
}
function gfind {
  awk "/#\[$1-start\]/,/#\[$1-end\]/ { print }" ~/bin/dotfiles/bash/aliases
}
function hnp {
  rails new $1 -d postgresql -T
  cd $1
  git init .
  ga .
  gc -m 'Initial Commit'
  heroku create --remote staging
  git push staging master
  heroku run rake db:migrate --remote staging
  heroku rename "s-$1"
  heroku open
  heroku create --remote production
  go -b staging
  git remote -v
  #cp config/environments/production.rb config/environments/staging.rb
  #heroku config:add RACK_ENV=staging RAILS_ENV=staging --remote staging
}
function nios {
  mkdir -p assets/images assets/images@2x assets/nibs
  mkdir -p classes/constants classes/controllers classes/lib classes/models classes/managers classes/utils classes/views
}
function np {
  cd ~/dev/_illuminati/projects
  take $1
  mkdir assets working_files to_client
}
function count {
  ls | wc -l
}
function take {
  mkdir $1
  cd $1
}
function tm {
  tmux new -s $1
}
function push {
  git push
  git push heroku
}
function prec {
  RAILS_ENV=production 
  bundle exec rake assets:precompile
}
function tell {
  cd $1
  ls -l
}
function rvm_install {
  rvm install $1 --with-gcc=clang
}
function migrate {
  rake db:migrate
  rake db:test:prepare
}
function parse_git_branch {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ \[\1\]/'
}
parse_git_tag () {
  git describe --tags 2> /dev/null
}
parse_git_branch_or_tag() {
  local OUT="$(parse_git_branch)"
  if [ "$OUT" == " ((no branch))" ]; then
    OUT="($(parse_git_tag))";
  fi
  echo $OUT
}
function proml {

  local        BLUE="\[\033[0;34m\]"
  local     DEFAULT="\[\033[0m\]"

#PS1="\n\u: \w $BLUE\$(parse_git_branch) $DEFAULT \n➥ "
PS1="\n\u: \w $BLUE\$(parse_git_branch_or_tag) $DEFAULT \n➥ "
}
proml
